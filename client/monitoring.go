// Code generated by goagen v1.3.1, DO NOT EDIT.
//
// API "ATQ - Director": monitoring Resource Client
//
// Command:
// $ goagen
// --design=github.com/mtenrero/ATQ-Director/http/design
// --out=$(GOPATH)\src\github.com\mtenrero\ATQ-Director
// --version=v1.3.1

package client

import (
	"context"
	"fmt"
	"net/http"
	"net/url"
)

// PingMonitoringPath computes a request path to the ping action of monitoring.
func PingMonitoringPath() string {

	return fmt.Sprintf("/api/monitoring/ping")
}

// Endpoint for pinging and healthcheck purposes
func (c *Client) PingMonitoring(ctx context.Context, path string) (*http.Response, error) {
	req, err := c.NewPingMonitoringRequest(ctx, path)
	if err != nil {
		return nil, err
	}
	return c.Client.Do(ctx, req)
}

// NewPingMonitoringRequest create the request corresponding to the ping action endpoint of the monitoring resource.
func (c *Client) NewPingMonitoringRequest(ctx context.Context, path string) (*http.Request, error) {
	scheme := c.Scheme
	if scheme == "" {
		scheme = "http"
	}
	u := url.URL{Host: c.Host, Scheme: scheme, Path: path}
	req, err := http.NewRequest("GET", u.String(), nil)
	if err != nil {
		return nil, err
	}
	return req, nil
}
